import { useContext } from "react";
import { AuthContext } from "../contexts/AuthContext"; // ‚úÖ Certifique-se de que est√° correto

// üî• Defini√ß√£o dos Tipos de Usu√°rio (baseado no backend)
const TIPOS_USUARIO = {
    ADMINISTRADOR: 0,
    DEFAULT: 1,
    CONVIDADO: 2
};

const usePermissao = (usuarioIdRecurso = null) => {
    const { usuario } = useContext(AuthContext); // ‚úÖ Obt√©m usu√°rio logado
    const tipoUsuario = usuario?.tipoUsuario; // ‚úÖ Agora √© um n√∫mero (0,1,2)
    const usuarioLogadoId = usuario?.userId; // ‚úÖ Obt√©m ID do usu√°rio logado

    console.log("üöÄ Debug - Usu√°rio Logado:", { usuarioLogadoId, tipoUsuario, usuarioIdRecurso });

    /** 
     * üìå üìå L√≥gica de permiss√µes
     * - Administrador: Acesso total
     * - Default: Edita apenas seus pr√≥prios dados
     * - Convidado: Apenas visualiza√ß√£o
     */
    const permissoes = {
        [TIPOS_USUARIO.ADMINISTRADOR]: {
            podeEditar: true,
            podeExcluir: true,
            podeCriar: true,
            podeVisualizarTudo: true, // ‚úÖ Pode ver tudo
        },
        [TIPOS_USUARIO.DEFAULT]: {
            podeEditar: usuarioIdRecurso ? usuarioLogadoId === usuarioIdRecurso : true, // ‚úÖ Se tiver usu√°rioId, s√≥ pode editar os seus pr√≥prios
            podeExcluir: usuarioIdRecurso ? usuarioLogadoId === usuarioIdRecurso : true,
            podeCriar: true,
            podeVisualizarTudo: false, // ‚ùå N√£o pode ver tudo
        },
        [TIPOS_USUARIO.CONVIDADO]: {
            podeEditar: false,
            podeExcluir: false,
            podeCriar: false,
            podeVisualizarTudo: false, // ‚ùå N√£o pode ver tudo
        }
    };

    return permissoes[tipoUsuario] || permissoes[TIPOS_USUARIO.CONVIDADO];
};

export default usePermissao;
